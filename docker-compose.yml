version: "3.9"

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes: # sync the code into the container (so we don't have to rebuild after changing a code)
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - DB_NAME=aggregatordb
      - DB_USER=devuser
      - DB_PASSWORD=changeme
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-aggregator-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=aggregatordb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
    ports:
      - 5432:5432

  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A app worker --beat -l info --concurrency 1
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=aggregatordb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
      - DB_HOST=db
      - DB_NAME=aggregatordb
      - DB_USER=devuser
      - DB_PASSWORD=changeme
      - APPLIFTING_API_TOKEN=5981c742-831d-41f9-9c8f-23c1706bf27d
    depends_on:
      - redis
      - app
      - db

  redis:
    image: "redis:alpine"

volumes:
  dev-aggregator-db-data:
